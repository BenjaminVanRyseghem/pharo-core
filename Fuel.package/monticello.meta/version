(name 'Fuel-SvenVanCaekenberghe.792' message '13000 Integrate Fuel 1.9.3	https://pharo.fogbugz.com/f/cases/13000' id '952749d7-9950-4383-b224-73ef1b22dee0' date '5 March 2014' time '11:44:26.729294 pm' author 'SvenVanCaekenberghe' ancestors ((name 'Fuel-MartinDias.791' message 'Fix for FLBufferedWriteStream>>nextWordsPut:.I think that FLBufferedWriteStream>>nextWordsPut: should not assume that the argument responds to #byteSize, but it *can* assume that the argument is a "variable bits words" object. So looking in other methods in the system, I propose to change the following line in #nextWordsPut: 	byteSize := aWordObject byteSize.by:	byteSize := aWordObject basicSize * 4.May be nice to use "Smalltalk vm wordSize" instead of a hard-coded 4, but anyways, this assumption of wordSize=4 is already spread in other places of fuel and the system in general.' id '480af161-48da-435d-8630-ffb17d38f293' date '19 February 2014' time '11:34:57.72289 pm' author 'MartinDias' ancestors ((name 'Fuel-MaxLeske.790' message '* updated Fuel verision to 1.9.3' id '650d2216-4c90-4395-b78d-ce7e37f8ae73' date '18 February 2014' time '2:13:54.000264 pm' author 'MaxLeske' ancestors ((name 'Fuel-MaxLeske.789' message '* backport of https://pharo.fogbugz.com/f/cases/12052/Fuel-could-store-LargeNegativeInteger-up-to-32bits-magnitude' id '7b414df6-e95e-4eee-a1dd-ca37ed9c1542' date '17 February 2014' time '8:42:26.665345 pm' author 'MaxLeske' ancestors ((name 'Fuel-MaxLeske.788' message '* temporary fix for serialization of uninstalled CompileMethod objects (needed since decompilation isn''t supported by Opal)' id '0074e26f-3659-4923-8265-5960ef364e1d' date '6 November 2013' time '9:18:49.830422 am' author 'MaxLeske' ancestors ((name 'Fuel-MaxLeske.787' message 'merging tips from 3.0 development and fuel repo' id '2199a684-70e6-4dee-b3f1-ee389d959aed' date '29 October 2013' time '11:41:05.948727 pm' author 'MaxLeske' ancestors ((name 'Fuel-MarianoMartinezPeck.775' message 'Added a helper debug method' id '0808daf4-0a3d-445f-8ef8-c478d51e133f' date '24 September 2013' time '4:36:29.196 pm' author 'MarianoMartinezPeck' ancestors ((name 'Fuel-MarianoMartinezPeck.774' message 'There was a bug with BlockClosure serialization in which closures were not considered to be serialized as a clean copy because #shouldBeSubstitutedByCleanCopy was answering false, even if #isClean was answering true. Problem was that #shouldBeSubstitutedByCleanCopy was answering false if the closure''s sender was nil (because it assumes the clean copy would have cleaned that). This was just to avoid loops with the substitue.  Still, there could be closures whose senders are nil from the beginning...so they MUST be serialized as clean.The solution is to use a new feature we added not so long ago to properly manage substitutions loop problem. In BlockClosure >> #fuelAccept:  I changed aGeneralMapper visitSubstitution: self by: self cleanCopy    to:aGeneralMapper visitSubstitution: self by: self cleanCopy onRecursionDo: [ aGeneralMapper visitVariableObject: self ] and do not check anymore by "sender isNil" in #shouldBeSubstitutedByCleanCopy' id 'f195b5a9-1878-44b9-b98f-f9ea295dfe37' date '24 September 2013' time '2:55:51.116 pm' author 'MarianoMartinezPeck' ancestors ((name 'Fuel-MarianoMartinezPeck.773' message 'Fixed #variablesMappingFor: so that migration of instance variables to classes are also performed to subclasses. ' id '60480d7d-9512-4597-9eee-1e04bbe0d71d' date '1 August 2013' time '10:02:44.087 am' author 'MarianoMartinezPeck' ancestors ((name 'Fuel-MartinDias.772' message 'Merge from Pharo#30220:- fix in DateAndTime serialization.- added Object>>serializeToFileNamed:' id 'fdf2e904-7112-4fda-bcec-0ef79a233ad1' date '25 June 2013' time '4:13:38.049868 pm' author 'MartinDias' ancestors ((name 'Fuel-MarcusDenker.766' message '10912 Add simple #fuelTo: aFile method on Object	https://pharo.fogbugz.com/f/cases/10912	10919 Direct reference to ClassBuilder in a test case in Tests-System	https://pharo.fogbugz.com/f/cases/10919	10930 Clean up #modelSleep	https://pharo.fogbugz.com/f/cases/10930' id '834cc53e-5350-4606-a5c4-d32cb3b10602' date '18 June 2013' time '8:49:26.602987 am' author 'MarcusDenker' ancestors ((name 'Fuel-CamilloBruni.765' message 'added Object >> #serializeToFileNamed:' id 'e2ea02c9-3ae8-4a09-bd99-7b52f5d9116e' date '14 June 2013' time '10:02:34.102065 am' author 'CamilloBruni' ancestors ((name 'Fuel-MarcusDenker.764' message '10425 DateAndTime refactoring	https://pharo.fogbugz.com/f/cases/10425' id '9c1d093d-7a3c-4778-aa2b-321927e2cd0d' date '3 May 2013' time '9:41:22.874907 am' author 'MarcusDenker' ancestors ((name 'Fuel-nice.763' message 'Refactor dateAndTime to fix a bunch of bugsSee https://pharo.fogbugz.com/default.asp?10425Here is what I did to Time:- added access to primitive 240 (microseconds ellapsed since Squeak Epoch UTC) and method #microsecondClockValue- added microsecondsToRun: microsecondsSince: - used this new primitive in place of primSecondsClock (137)- fixed dateAndTimeNow and dateAndTimeFromSeconds:- fixed/simplified nowHere is what I did to DateAndTime:- simplified now -- WARNING: it is not rounded to whole second- simplified totalSeconds (localOffset not needed anymore with new Time)- removed horrible milliSecondsSinceMidnight todayAtMilliSeconds: and todayAtNanoSeconds:- deprecated secondsSinceMidnight replaced by secondsSinceMidnightUTC- replaced some usage of localSeconds by secondsSinceMidnightLocalTime (the former is not normalized, the later is between 0 and 86399)- simplified the usage of % (I don''t think we need yet another remainder/modulo operator - beside the one of C is more like rem: )- normalized all instances of DateAndTime at creation time (setJdn:seconds:nano:offset:) and always used this method (impacts Fuel)- corrected hasEqualTicks: and used it for a faster =- corrected asTime and asDuraiton (don''t use not normalized localSeconds)- corrected < to use julianDayNumberUTC- corrected hash (don''t use offset in hash)- removed normalize:ticks:base: since it has side effects (modify the ticks argument)  and since it does not gain speed (I will later use new primitives for accelerating \\ and rem: like in Squeak).' id '278eb98a-3097-4370-93e7-28e86098899d' date '28 April 2013' time '1:55:19.18407 am' author 'nice' ancestors ((name 'Fuel-EstebanLorenzano.762' message 'Issue 7201:	Check Fuel: merge back changes, load latest version	https://code.google.com/p/pharo/issues/detail?id=7201	' id '8b50b57a-919b-4775-90e5-e2770669b41b' date '25 February 2013' time '5:34:27.968 pm' author 'EstebanLorenzano' ancestors () stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Fuel-MaxLeske.766' message '* replaced #fuelIgnore with the more flexible #fuelReplacement* implemented a less intrusive approach to reference tracking (all done on the clusters)' id '9b36f219-2d15-4884-9fc2-a5c6315c27df' date '4 May 2013' time '11:50:15.711 am' author 'MaxLeske' ancestors ((name 'Fuel-MaxLeske.765' message '* first version of reference collection during analysis (see http://code.google.com/p/fuel/issues/detail?id=202)' id '1322c962-6690-4cec-ad2f-e8c057b8b16d' date '3 May 2013' time '11:10:56.408 am' author 'MaxLeske' ancestors ((name 'Fuel-MaxLeske.764' message 'EXPERIMENTAL* fixed #fuelIgnore handling' id '3c8b1cc2-4f5b-4f24-86c7-48d3bb11881a' date '3 May 2013' time '10:54:16.309 am' author 'MaxLeske' ancestors ((name 'Fuel-MaxLeske.763' message 'EXPERIMENTAL* dirty hack that stores all the references during analysis' id '5a567565-a285-4dbd-b022-3b9248b65ab8' date '3 May 2013' time '10:00:26.064 am' author 'MaxLeske' ancestors ((id '8b50b57a-919b-4775-90e5-e2770669b41b')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Fuel-MaxLeske.786' message '* cleaned up FLBufferedWriteStream>>copyWordObjectToBuffer:' id '910d6134-bcee-4a8d-9d22-16cc03451cd9' date '29 October 2013' time '9:52:31.235417 pm' author 'MaxLeske' ancestors ((name 'Fuel-StephaneDucasse.785' message '- Issue: 12009 BitBlt current -> BitBlt	https://pharo.fogbugz.com/f/cases/12009/BitBlt-current-BitBlt	- Issue: 12013: Zinc Character Encoding and Resource Meta update	https://pharo.fogbugz.com/f/cases/12013/- Issue: 12014 Extract History from Nautilus-History	https://pharo.fogbugz.com/f/cases/12014/' id '9161dd5f-d8d4-45e5-a6a4-a2905dccc73f' date '25 October 2013' time '7:18:53.542326 pm' author 'StephaneDucasse' ancestors ((name 'Fuel-StephaneDucasse.784' message 'remove all the use of BitBlt current and just use BitBlt' id '954f31dc-9a3d-41f4-b02c-9651e92bd804' date '25 October 2013' time '4:22:16.403028 pm' author 'StephaneDucasse' ancestors ((name 'Fuel-MarcusDenker.783' message '11883 Clean 2 classes from Startup and Shutdownlist each	https://pharo.fogbugz.com/f/cases/11883	11884 Remove global ImageImports	https://pharo.fogbugz.com/f/cases/11884	11882 Small cleanup in Manifest	https://pharo.fogbugz.com/f/cases/11882' id 'e71e644f-afc1-43f5-8e87-456ac27a1ade' date '15 October 2013' time '1:07:42.417289 pm' author 'MarcusDenker' ancestors ((name 'Fuel-MarcusDenker.782' message '11884Remove global ImageImports' id 'bd711f63-04f3-464c-a12c-73d9f3ccb08e' date '15 October 2013' time '12:54:08.990268 pm' author 'MarcusDenker' ancestors ((name 'Fuel-MarcusDenker.781' message '11847 Some classes hold on to blocks statically: make sure #cleanUp resets those caches	https://pharo.fogbugz.com/f/cases/11847' id '8850d2ad-81ba-442b-b319-e3b141c7e2f0' date '11 October 2013' time '1:57:50.088708 pm' author 'MarcusDenker' ancestors ((name 'Fuel-MarcusDenker.780' message '11847Some classes hold on to blocks statically: make sure #cleanUp resets those caches' id 'e96498fa-6d58-47f5-a457-842157ee7fbc' date '11 October 2013' time '1:28:47.057902 pm' author 'MarcusDenker' ancestors ((name 'Fuel-StephaneDucasse.779' message '- issue 11420 Monticello is looking for all ancestors even when there are none	https://pharo.fogbugz.com/default.asp?11420	- issue 11408 https://pharo.fogbugz.com/default.asp?11408	https://pharo.fogbugz.com/default.asp?11408' id '5c64a005-60dc-42bd-918f-28665341913b' date '14 August 2013' time '3:09:36.164452 pm' author 'StephaneDucasse' ancestors ((name 'Fuel-StephaneDucasse.777' message 'another try.... Normally there is no automatic method cat diry package' id 'd62efafc-9733-4392-b82a-b327923c9dec' date '14 August 2013' time '2:16:40.996182 pm' author 'StephaneDucasse' ancestors ((name 'Fuel-MarcusDenker.776' message '4142 Suggestions: move examples from UIThemes class to ExampleBuilderMorph class	https://pharo.fogbugz.com/f/cases/4142	11261 isNil ifTrue: to ifNil: part 1	https://pharo.fogbugz.com/f/cases/11261	11262 isNil ifTrue: to ifNil: part 2	https://pharo.fogbugz.com/f/cases/11262' id '45fe07a4-3288-40e3-a4f6-44a459063c8e' date '29 July 2013' time '3:37:19.308832 pm' author 'MarcusDenker' ancestors ((name 'Fuel-ClementBera.775' message 'isNil ifTrue: to ifNil:' id 'e8035c1a-0ccb-4799-9363-395a74e95c58' date '29 July 2013' time '2:48:21.684856 pm' author 'ClementBera' ancestors ((name 'Fuel-ClementBera.774' message 'fixed a test' id '83004824-7560-40b2-a210-52fb98152e1c' date '26 July 2013' time '5:53:41.158592 pm' author 'ClementBera' ancestors ((name 'Fuel-ClementBera.773' message 'ifNil instead of isNil ifTrue' id 'fcf2bce9-a0f6-4abc-9578-810c86740bbd' date '26 July 2013' time '5:23:24.70041 pm' author 'ClementBera' ancestors ((name 'Fuel-MarcusDenker.772' message '11234 LargeNegativeInteger inherits from LargePositiveInteger (part 2)	https://pharo.fogbugz.com/f/cases/11234' id '8d776ef1-2ac4-4c92-b25e-b863948306b9' date '26 July 2013' time '1:47:19.115764 pm' author 'MarcusDenker' ancestors ((name 'Fuel-EstebanLorenzano.771' message '10889 ExplicitRequirement methods bug	https://pharo.fogbugz.com/f/cases/10889/' id '8be25b07-c7c3-4a34-9180-a19a722c0188' date '18 July 2013' time '4:01:16.726891 pm' author 'EstebanLorenzano' ancestors ((name 'Fuel-EstebanLorenzano.769' message '10992 Some methods in Class could be moved to TClass	https://pharo.fogbugz.com/f/cases/10992/	(pass 2)' id 'e7863051-921c-49e3-9263-2fecf9623d2f' date '18 July 2013' time '3:25:39.442302 pm' author 'EstebanLorenzano' ancestors ((name 'Fuel-MarcusDenker.768' message '11158 Remove spread occurrences of ImageSegment in comments	https://pharo.fogbugz.com/f/cases/11158	11141 OCUndeclaredVariableWarning is not handled properly in the STComandLineHandler	https://pharo.fogbugz.com/f/cases/11141	5468 Extract CRC from Zip implementation	https://pharo.fogbugz.com/f/cases/5468' id '9c68b3d6-145e-4168-a719-a35096afd250' date '16 July 2013' time '1:21:42.046637 pm' author 'MarcusDenker' ancestors ((name 'Fuel-MaxLeske.767' message '* replaced uses of custom checksum methods with delegations to CRC / Adler32* moved ZipPlugin primitives for rolling checksum calculation to Checksum hierarchy' id '4c5eee9a-2934-49f8-ad32-4528d1ebbbb4' date '8 July 2013' time '9:54:57.893358 pm' author 'MaxLeske' ancestors ((id '834cc53e-5350-4606-a5c4-d32cb3b10602')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())