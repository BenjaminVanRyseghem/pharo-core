(name 'Zinc-Character-Encoding-Tests-SvenVanCaekenberghe.15' message 'Added a unit test to make sure ZnCharacterReadStream>>#readInto:startingAt:count: does an actual becomeForward when needed' id '8c41ee29-9906-4626-a9da-cb576980cd4c' date '13 November 2013' time '3:05:18.26391 pm' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Tests-SvenVanCaekenberghe.14' message 'Added unit tests for the new ZnUTF16Encoder' id '6309f553-1632-438d-825c-b7a0f89193f4' date '8 November 2013' time '4:18:53.717919 pm' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Tests-SvenVanCaekenberghe.13' message 'Added 2 more unit tests ZnCharacterReadStream and ZnCharacterWriteStream now use the optimized bulk reading/writing methods from ZnCharacterEncoder (#readInto:startingAt:count:fromStream: and #next:putAll:startingAt:toStream: respectively)Fixed a bug in ZnUTF8Encoder>>#optimizedReadInto:startingAt:count:fromStream:Some refactoring and cleanup of ZnUTF8Encoder and ZnByteEncoder' id '71b503eb-548e-4e2f-b80d-4d2b805bd11e' date '6 November 2013' time '10:11:11.411621 am' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Tests-SvenVanCaekenberghe.12' message 'Added an optimalization to ZnUTF8Encoder>>#readInto:startingAt:count:fromStream: to avoid the price of #becomeForward: when a ByteString to WideString conversion happens' id '691abf05-9485-451a-aea0-6a3a08dd2939' date '11 June 2013' time '4:33:14.469609 pm' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Tests-SvenVanCaekenberghe.11' message 'merge' id '352e538c-d3c0-411c-be19-bb8e7181b391' date '11 June 2013' time '9:22:23.430785 am' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Tests-SvenVanCaekenberghe.10' message 'Added an optimized ZnUTF8Encoder>>#decodeBytes: and an even faster #decodeBytesIntoWideString: (thx johnny/JanStruz)' id 'c4338bce-4823-4afd-9c03-ed82ddf2afff' date '10 June 2013' time '11:20:45.283247 pm' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Tests-SvenVanCaekenberghe.8' message 'Introduction of an explicit ZnInvalidUTF8 exception.' id '873f8d6a-5631-4dfb-8fb5-cda3e522c9ee' date '3 June 2013' time '8:15:02.069 pm' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Tests-SvenVanCaekenberghe.7' message 'ZnUTF8Encoder:- enabled #next:putAll:startingAt:toStream: for real- added & enabled #optimizedReadInto:startingAt:count:fromStream:- #nextFromStream now signals specific errors on eof- some refactoring/cleanup' id 'dc085fe8-a4e4-46f4-a5c0-2678315e7428' date '25 May 2013' time '10:30:26.373159 am' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Tests-SvenVanCaekenberghe.6' message 'Introduction of ZnCharacterEncoder>>#next:putAll:startingAt:toStream with optimized implementations in ZnNullEncoder and ZnUTF8Encoder for ByteString instances' id '49bd7fce-ffab-4c09-9bf3-a3c550090cab' date '22 May 2013' time '4:16:17.452227 pm' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Tests-SvenVanCaekenberghe.5' message 'Added String>>#urlEncoded & #urlDecoded - Thx Camillo Bruni' id 'c0387a62-53b8-421c-b74b-43d224d63afc' date '16 April 2013' time '9:19:26.735 am' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Tests-SvenVanCaekenberghe.4' message 'Bugfix to ZnPercentEncoder: always use 2 hex digits (Thanks Benjamin Van Ryseghem)' id 'a1f1c1f3-7878-45db-a609-0d4c3ff81e69' date '1 March 2013' time '9:36:51.992 pm' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Tests-SvenVanCaekenberghe.3' message 'merging in some Gemstone portability changes by Ken Treis' id '9045618f-8b58-4d47-b6f8-8c18ca27869d' date '21 January 2013' time '1:16:18.853 pm' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Tests-KenTreis.2.1' message 'Minor changes for GemStone Compatibility that hopefully don''t break anything in Pharo:* Use `ByteArray new writeStream` rather than `#[] writeStream`* In ZnBase64EncoderTests, put CRs in for line breaks explicitly' id '0c541244-918a-4df3-9543-170b07bd6870' date '19 January 2013' time '11:05:42 am' author 'KenTreis' ancestors ((name 'Zinc-Character-Encoding-Tests-SvenVanCaekenberghe.2' message 'stop using ZnNullEncoder for latin1;added #beLenient option to make a ZnByteEncoder non-strict (the old behavior)' id '5a82017c-5d0e-448c-a7a3-1b8f35aae2d2' date '17 December 2012' time '4:08:57 am' author 'SvenVanCaekenberghe' ancestors ((name 'Zinc-Character-Encoding-Tests-SvenVanCaekenberghe.1' message 'creation of Zinc-Character-Encoding-[Core|Tests] by moving various classes out of Zinc-HTTP' id '9f23b0ec-9909-4839-b631-db4c10c9f613' date '16 December 2012' time '5:01:49 am' author 'SvenVanCaekenberghe' ancestors () stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())(name 'Zinc-Character-Encoding-Tests-SvenVanCaekenberghe.9' message 'Added support to ZnUTF8Encoder to detect overlong (non-shortest form) encodings as well as to skip the Unicode Byte Order Mark (BOM) character' id '3cfdf396-c625-4c8f-9aea-ede90630edcb' date '4 June 2013' time '5:29:38.969333 pm' author 'SvenVanCaekenberghe' ancestors ((id '873f8d6a-5631-4dfb-8fb5-cda3e522c9ee')) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())) stepChildren ())