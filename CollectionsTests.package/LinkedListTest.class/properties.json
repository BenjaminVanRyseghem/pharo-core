{
	"category" : "CollectionsTests-Sequenceable",
	"classinstvars" : [
		 ],
	"classtraitcomposition" : "TAddTest classTrait + TEmptyTest classTrait + TIterateTest classTrait + TIterateSequencedReadableTest classTrait + TPrintTest classTrait + TAsStringCommaAndDelimiterSequenceableTest classTrait + TIndexAccess classTrait + TSequencedElementAccessTest classTrait + TSubCollectionAccess classTrait + TConvertTest classTrait + TCopyPartOfSequenceable classTrait + TCopySequenceableSameContents classTrait + TCopySequenceableWithOrWithoutSpecificElements classTrait + TCopyTest classTrait + TCopySequenceableWithReplacement classTrait + TBeginsEndsWith classTrait + TRemoveTest classTrait + TSetArithmetic classTrait + TIncludesWithIdentityCheckTest classTrait + TStructuralEqualityTest classTrait + TOccurrencesTest classTrait",
	"classvars" : [
		 ],
	"commentStamp" : "mk 8/3/2005 11:55",
	"instvars" : [
		"nextLink",
		"n",
		"list",
		"link1",
		"link2",
		"link3",
		"link4",
		"nonEmpty",
		"otherList",
		"link",
		"collectionWithNil",
		"collectionWithoutNil",
		"nonEmpty1Element",
		"collectionWithoutEqualElements",
		"elementNotIn",
		"elementIn",
		"sameAtendAndBegining",
		"collection5Elements",
		"collectResult" ],
	"name" : "LinkedListTest",
	"pools" : [
		 ],
	"super" : "TestCase",
	"traitcomposition" : "TAddTest - {#testTAddWithOccurences. #testTAddTwice. #testTWriteTwice} + TEmptyTest + TIterateTest + TIterateSequencedReadableTest + TPrintTest + TAsStringCommaAndDelimiterSequenceableTest + TIndexAccess + TSequencedElementAccessTest + TSubCollectionAccess + (TConvertTest - {#testAsByteArray. #integerCollectionWithoutEqualElements}) + (TCopyPartOfSequenceable - {#testCopyEmptyMethod}) + (TCopySequenceableSameContents - {#testSortBy. #integerCollection}) + TCopySequenceableWithOrWithoutSpecificElements + TCopyTest + (TCopySequenceableWithReplacement - {#testCopyReplaceAllWithManyOccurence. #collectionWith2TimeSubcollection}) + TBeginsEndsWith + TRemoveTest + TSetArithmetic + TIncludesWithIdentityCheckTest + TStructuralEqualityTest + TOccurrencesTest",
	"type" : "normal" }
